/**
 * GENERATED FILE - DO NOT EDIT
 * This file is automatically generated by the generate-token-types script.
 * Generated on: 2025-10-21T01:01:54.310Z
 */

import {
  AllowReuseToken,
  ArithmeticOperatorToken,
  AuthorToken,
  BooleanLiteralToken,
  ChoiceOptionToken,
  ChoiceToken,
  CloseBraceToken,
  CloseParenthesisToken,
  CommentToken,
  ComparisonOperatorToken,
  CreateTempVariableToken,
  CreateVariableToken,
  DeleteVariableToken,
  DisableReuseToken,
  ElseIfToken,
  ElseToken,
  EndingToken,
  FakeChoiceToken,
  FinishToken,
  GameIdentifierToken,
  GenerateRandomToken,
  GoSubSceneToken,
  GoSubToken,
  GotoLabelToken,
  GotoRandomSceneToken,
  GotoSceneToken,
  HideReuseToken,
  IdentifierToken,
  IfToken,
  ImageToken,
  InputNumberToken,
  InputTextToken,
  LabelToken,
  LineBreakToken,
  LinkToken,
  LogicalOperatorToken,
  MultiReplaceElseToken,
  NumberLiteralToken,
  OpenMultiReplaceToken,
  OpenParenthesisToken,
  OpenPrintCapitaliseAllToken,
  OpenPrintCapitaliseFirstToken,
  OpenPrintToken,
  PageBreakToken,
  ProseToken,
  RestoreCheckpointToken,
  ReturnToken,
  SaveCheckpointToken,
  SceneEndToken,
  SceneStartToken,
  SelectableIfToken,
  SetVariableToken,
  StatChartToken,
  StringLiteralToken,
  UnaryOperatorToken,
} from './';

/**
 * Union type of all possible token types.
 * This is automatically extracted from all token interfaces.
 */
export type TokenType =
  | AllowReuseToken['type']
  | ArithmeticOperatorToken['type']
  | AuthorToken['type']
  | BooleanLiteralToken['type']
  | ChoiceOptionToken['type']
  | ChoiceToken['type']
  | CloseBraceToken['type']
  | CloseParenthesisToken['type']
  | CommentToken['type']
  | ComparisonOperatorToken['type']
  | CreateTempVariableToken['type']
  | CreateVariableToken['type']
  | DeleteVariableToken['type']
  | DisableReuseToken['type']
  | ElseIfToken['type']
  | ElseToken['type']
  | EndingToken['type']
  | FakeChoiceToken['type']
  | FinishToken['type']
  | GameIdentifierToken['type']
  | GenerateRandomToken['type']
  | GoSubSceneToken['type']
  | GoSubToken['type']
  | GotoLabelToken['type']
  | GotoRandomSceneToken['type']
  | GotoSceneToken['type']
  | HideReuseToken['type']
  | IdentifierToken['type']
  | IfToken['type']
  | ImageToken['type']
  | InputNumberToken['type']
  | InputTextToken['type']
  | LabelToken['type']
  | LineBreakToken['type']
  | LinkToken['type']
  | LogicalOperatorToken['type']
  | MultiReplaceElseToken['type']
  | NumberLiteralToken['type']
  | OpenMultiReplaceToken['type']
  | OpenParenthesisToken['type']
  | OpenPrintCapitaliseAllToken['type']
  | OpenPrintCapitaliseFirstToken['type']
  | OpenPrintToken['type']
  | PageBreakToken['type']
  | ProseToken['type']
  | RestoreCheckpointToken['type']
  | ReturnToken['type']
  | SaveCheckpointToken['type']
  | SceneEndToken['type']
  | SceneStartToken['type']
  | SelectableIfToken['type']
  | SetVariableToken['type']
  | StatChartToken['type']
  | StringLiteralToken['type']
  | UnaryOperatorToken['type'];

/**
 * Manual fallback union of all token type literals.
 * This is provided as a reference and for use with older TypeScript versions.
 */
export type TokenTypeLiteral =
  | 'AllowReuse'
  | 'AssignmentOperator'
  | 'Author'
  | 'BooleanLiteral'
  | 'ChoiceOption'
  | 'Choice'
  | 'CloseBrace'
  | 'CloseParenthesis'
  | 'Comment'
  | 'EqualityOperator'
  | 'CreateTempVariable'
  | 'CreateVariable'
  | 'DeleteVariable'
  | 'DisableReuse'
  | 'ElseIf'
  | 'Else'
  | 'Ending'
  | 'FakeChoice'
  | 'Finish'
  | 'GameIdentifier'
  | 'GenerateRandom'
  | 'GoSubScene'
  | 'GoSub'
  | 'GotoLabel'
  | 'GotoRandomScene'
  | 'GotoScene'
  | 'HideReuse'
  | 'Identifier'
  | 'If'
  | 'Image'
  | 'InputNumber'
  | 'InputText'
  | 'Label'
  | 'LineBreak'
  | 'Link'
  | 'LogicalAnd'
  | 'MultiReplaceElse'
  | 'NumberLiteral'
  | 'OpenMultiReplace'
  | 'OpenParenthesis'
  | 'OpenPrintCapitaliseAll'
  | 'OpenPrintCapitaliseFirst'
  | 'OpenPrint'
  | 'PageBreak'
  | 'Prose'
  | 'RestoreCheckpoint'
  | 'Return'
  | 'SaveCheckpoint'
  | 'SceneEnd'
  | 'SceneStart'
  | 'SelectableIf'
  | 'SetVariable'
  | 'StatChart'
  | 'StringLiteral'
  | 'NotOperator';
